{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\pages\\\\Cadastro.tsx\",\n    _s = $RefreshSig$();\n\nimport '../style/Home.scss';\nimport logo from '../assets/images/logo.png';\nimport { Button } from '../components/Button/index';\nimport { Link } from 'react-router-dom';\nimport { MainAside } from '../components/MainAside';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cadastro() {\n  _s();\n\n  const [terms, setTerms] = useState(false);\n  const [infoSign, setInfoSign] = useState({\n    'nome': '',\n    'sobrenome': '',\n    'email': '',\n    'senha': '',\n    'senhaConfirma': '',\n    'dataNascimento': ''\n  });\n\n  async function handleSignUp(event) {\n    event.preventDefault();\n    let formInfoSign = Object.entries(infoSign);\n    const dataConfigs = new FormData();\n    formInfoSign.map(data => {\n      dataConfigs.append(data[0], data[1]);\n    });\n    const configs = {\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: dataConfigs\n    };\n    fetch('http://localhost:8000/cadastro', configs).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-home\",\n    children: [/*#__PURE__*/_jsxDEV(MainAside, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"right-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo frindly finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"J\\xE1 possu\\xED a sua conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: '/',\n          children: \"fazer login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignUp,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'nome': event.target.value\n              };\n            });\n          },\n          value: infoSign.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Sobrenome\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'sobrenome': event.target.value\n              };\n            });\n          },\n          value: infoSign.sobrenome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'email': event.target.value\n              };\n            });\n          },\n          value: infoSign.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Senha\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'senha': event.target.value\n              };\n            });\n          },\n          value: infoSign.senha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirme a senha\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'senhaConfirma': event.target.value\n              };\n            });\n          },\n          value: infoSign.senhaConfirma\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"div-date\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Data de nascimento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'dataNascimento': event.target.value\n                };\n              });\n            },\n            value: infoSign.dataNascimento\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"div-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checkTerms\",\n            onChange: event => {\n              setTerms(event.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"checkTerms\",\n            children: [\"Eu li e concordo com os \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"termos de uso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 77\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button-login\",\n          placeholder: \"Data de nascimento\",\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cadastro, \"0SUYDBF8m//OX+5qaSI7nzjqxtQ=\");\n\n_c = Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/pages/Cadastro.tsx"],"names":["logo","Button","Link","MainAside","useState","Cadastro","terms","setTerms","infoSign","setInfoSign","handleSignUp","event","preventDefault","formInfoSign","Object","entries","dataConfigs","FormData","map","data","append","configs","header","method","body","fetch","then","response","console","log","json","prevState","target","value","nome","sobrenome","email","senha","senhaConfirma","dataNascimento","checked"],"mappings":"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","sourcesContent":["import '../style/Home.scss'\r\nimport logo from '../assets/images/logo.png'\r\nimport { Button } from '../components/Button/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { MainAside } from '../components/MainAside'\r\nimport { FormEvent, useState } from 'react'\r\nexport function Cadastro() {\r\n\r\n    const [terms, setTerms] = useState(false)\r\n    const [infoSign, setInfoSign] = useState({\r\n        'nome': '',\r\n        'sobrenome': '',\r\n        'email': '',\r\n        'senha': '',\r\n        'senhaConfirma': '',\r\n        'dataNascimento': ''\r\n    })\r\n\r\n    async function handleSignUp(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        let formInfoSign = Object.entries(infoSign)\r\n        const dataConfigs = new FormData();\r\n        formInfoSign.map(data => {\r\n            dataConfigs.append(data[0], data[1])\r\n        })  \r\n        \r\n        const configs = {\r\n            header: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            method: 'POST',\r\n            body: dataConfigs\r\n        }\r\n        \r\n        fetch('http://localhost:8000/cadastro', configs)\r\n        .then(response => {\r\n            console.log(response)\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            console.log(data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-home\">\r\n\r\n            <MainAside />\r\n\r\n            <main id=\"right-content\">\r\n                <img src={logo} alt=\"Logo frindly finance\" />\r\n                <h2>Já possuí a sua conta? <Link to={'/'}>fazer login</Link></h2>\r\n                <form onSubmit={handleSignUp}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nome\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'nome': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.nome}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Sobrenome\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'sobrenome': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.sobrenome}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'email': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.email}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'senha': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.senha}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirme a senha\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'senhaConfirma': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.senhaConfirma}\r\n                    />\r\n                    <div id=\"div-date\">\r\n                        <label htmlFor=\"date\">Data de nascimento:</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"date\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'dataNascimento': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.dataNascimento}\r\n                        />\r\n                    </div>\r\n                    <div id=\"div-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"checkTerms\"\r\n                            onChange={event => {\r\n                                setTerms(event.target.checked)\r\n                            }}\r\n\r\n                        />\r\n                        <label htmlFor=\"checkTerms\">Eu li e concordo com os <a href=\"#\">termos de uso</a>  </label>\r\n                    </div>\r\n\r\n                    <Button className=\"button-login\" placeholder=\"Data de nascimento\" type=\"submit\">Cadastrar</Button>\r\n                </form>\r\n\r\n\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}