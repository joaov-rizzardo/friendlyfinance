{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\pages\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport '../style/login-cadastro.scss';\nimport logo from '../assets/images/logo.png';\nimport { Button } from '../components/Button/index';\nimport { Link, useHistory } from 'react-router-dom';\nimport { MainAside } from '../components/MainAside';\nimport { useState } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Load } from '../components/Load';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n\n  //estado utilizado para armazenar as informações de login\n  const [infoAuth, setInfoAuth] = useState({\n    'email': '',\n    'senha': ''\n  });\n  const history = useHistory(); //recuperando função de signIn do hook useAuth\n\n  const {\n    signIn\n  } = useAuth();\n\n  async function handleLogin(event) {\n    event.preventDefault(); //convertendo o objeto com os dados de login em array\n\n    let formInfoSignIn = Object.entries(infoAuth); //instanciando um objeto do tipo FormData\n\n    const dataConfigs = new FormData(); //percorre o array de dado de cadastro e preenche o objeto FormData com seus valores\n\n    formInfoSignIn.forEach(data => {\n      dataConfigs.append(data[0], data[1]);\n    }); //configurações que serão utilizadas para a requisição posteriormente\n\n    const configs = {\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: dataConfigs\n    }; //exibe a tela de load em quanto aguarda o termino da requisição\n\n    document.getElementById('form-content').style.display = 'none';\n    document.getElementById('load').style.display = 'flex';\n    fetch('http://localhost:8000/login', configs).then(response => {\n      return response.json();\n    }).then(data => {\n      document.getElementById('form-content').style.display = 'block';\n      document.getElementById('load').style.display = 'none'; //verifica o retorno da api, se false, exibe uma mensagem de erro na tela, se true, prossegue com o login\n\n      if (data.status === false) {\n        const erroMessage = document.getElementById('erroMessage');\n        erroMessage.innerHTML = 'Email e/ou senha inválidos';\n        erroMessage.style.display = 'block';\n      } else if (data.status === true) {\n        signIn(data.user); //rediriciona para a página principal após efetuar o login\n\n        history.push('/');\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-home\",\n    children: [/*#__PURE__*/_jsxDEV(MainAside, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"right-content\",\n      children: [/*#__PURE__*/_jsxDEV(Load, {\n        message: 'Aguarde, estamos verificando as suas credenciais...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo frindly finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"N\\xE3o possu\\xED uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: '/cadastro',\n            children: \"cadastre-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            onChange: event => {\n              setInfoAuth(prevState => {\n                return { ...prevState,\n                  'email': event.target.value\n                };\n              });\n            },\n            value: infoAuth.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Senha\",\n            onChange: event => {\n              setInfoAuth(prevState => {\n                return { ...prevState,\n                  'senha': event.target.value\n                };\n              });\n            },\n            value: infoAuth.senha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button-login\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"erroMessage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"WBl1E0ORgcBKLPnJ9UFmPTUHMQM=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/pages/Login.tsx"],"names":["logo","Button","Link","useHistory","MainAside","useState","useAuth","Load","Login","infoAuth","setInfoAuth","history","signIn","handleLogin","event","preventDefault","formInfoSignIn","Object","entries","dataConfigs","FormData","forEach","data","append","configs","header","method","body","document","getElementById","style","display","fetch","then","response","json","status","erroMessage","innerHTML","user","push","prevState","target","value","email","senha"],"mappings":"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","sourcesContent":["import '../style/login-cadastro.scss'\r\nimport logo from '../assets/images/logo.png'\r\nimport { Button } from '../components/Button/index'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { MainAside } from '../components/MainAside'\r\nimport { FormEvent, useState } from 'react'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport { Load } from '../components/Load'\r\n\r\nexport function Login() {\r\n    //estado utilizado para armazenar as informações de login\r\n    const [infoAuth, setInfoAuth] = useState({\r\n        'email': '',\r\n        'senha': ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    //recuperando função de signIn do hook useAuth\r\n    const { signIn } = useAuth()\r\n\r\n    async function handleLogin(event: FormEvent) {\r\n\r\n        event.preventDefault();\r\n\r\n        //convertendo o objeto com os dados de login em array\r\n        let formInfoSignIn = Object.entries(infoAuth)\r\n\r\n        //instanciando um objeto do tipo FormData\r\n        const dataConfigs = new FormData();\r\n\r\n        //percorre o array de dado de cadastro e preenche o objeto FormData com seus valores\r\n        formInfoSignIn.forEach(data => {\r\n            dataConfigs.append(data[0], data[1])\r\n        })\r\n\r\n        //configurações que serão utilizadas para a requisição posteriormente\r\n        const configs = {\r\n            header: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            method: 'POST',\r\n            body: dataConfigs\r\n        }\r\n\r\n        //exibe a tela de load em quanto aguarda o termino da requisição\r\n        document.getElementById('form-content')!.style.display = 'none'\r\n        document.getElementById('load')!.style.display = 'flex'\r\n\r\n        fetch('http://localhost:8000/login', configs)\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                document.getElementById('form-content')!.style.display = 'block'\r\n                document.getElementById('load')!.style.display = 'none'\r\n                //verifica o retorno da api, se false, exibe uma mensagem de erro na tela, se true, prossegue com o login\r\n                if (data.status === false) {\r\n                    const erroMessage = document.getElementById('erroMessage')\r\n                    erroMessage!.innerHTML = 'Email e/ou senha inválidos'\r\n                    erroMessage!.style.display = 'block'\r\n\r\n                } else if (data.status === true) {\r\n                    signIn(data.user)\r\n\r\n                    //rediriciona para a página principal após efetuar o login\r\n                    history.push('/')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-home\">\r\n            <MainAside />\r\n\r\n            <main id=\"right-content\">\r\n                <Load message={'Aguarde, estamos verificando as suas credenciais...'} />\r\n                <div id=\"form-content\">\r\n                    <img src={logo} alt=\"Logo frindly finance\" />\r\n                    <h2>Não possuí uma conta? <Link to={'/cadastro'}>cadastre-se</Link></h2>\r\n                    <form onSubmit={handleLogin}>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={event => {\r\n                                setInfoAuth(prevState => {\r\n                                    return { ...prevState, 'email': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoAuth.email}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Senha\"\r\n                            onChange={event => {\r\n                                setInfoAuth(prevState => {\r\n                                    return { ...prevState, 'senha': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoAuth.senha}\r\n                        />\r\n                        <Button className=\"button-login\" type=\"submit\">Login</Button>\r\n                        <p id=\"erroMessage\"></p>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}