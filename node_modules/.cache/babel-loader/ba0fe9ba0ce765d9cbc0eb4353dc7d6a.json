{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\components\\\\CadastroComponent\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from '../Button/index';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/logo.png';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Load } from '../Load';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CadastroComponent() {\n  _s();\n\n  const [terms, setTerms] = useState(false);\n  const [infoSign, setInfoSign] = useState({\n    'nome': '',\n    'sobrenome': '',\n    'email': '',\n    'senha': '',\n    'senhaConfirma': '',\n    'dataNascimento': ''\n  });\n\n  async function handleSignUp(event) {\n    event.preventDefault();\n    let erroMessage = document.getElementById('erroMessage');\n\n    if (terms == false) {\n      erroMessage.innerHTML = 'Você precisa aceitar os termos para se cadastrar.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.nome == '' || infoSign.sobrenome == '' || infoSign.email == '' || infoSign.senha == '' || infoSign.senhaConfirma == '' || infoSign.dataNascimento == '') {\n      erroMessage.innerHTML = 'Todos os campos precisam ser preenchidos.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.senha != infoSign.senhaConfirma) {\n      erroMessage.innerHTML = 'As senhas digitadas não se coincidem.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.senha.length < 8) {\n      erroMessage.innerHTML = 'As senha deve conter no minimo 8 caracteres';\n      erroMessage.style.display = 'block';\n    } else {\n      let formInfoSign = Object.entries(infoSign);\n      const dataConfigs = new FormData();\n      formInfoSign.map(data => {\n        dataConfigs.append(data[0], data[1]);\n      });\n      const configs = {\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: dataConfigs\n      };\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(Load, {\n        message: 'Aguarde, a sua conta está sendo criada...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this), document.getElementById('right-content'));\n      fetch('http://localhost:8000/cadastro', configs).then(response => {\n        return response.json();\n      }).then(data => {\n        if (data.status == false) {\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(CadastroComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 41\n          }, this), document.getElementById('right-content'));\n          erroMessage = document.getElementById('erroMessage');\n          erroMessage.innerHTML = 'Esse email já foi cadastrado.';\n          erroMessage.style.display = 'block';\n          console.log(erroMessage);\n        } else if (data.status == true) {\n          document.getElementById('right-content').innerHTML = '<h1>Hello world! </h1>';\n        }\n\n        console.log(data.status);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo frindly finance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"J\\xE1 possu\\xED a sua conta? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: '/',\n        children: \"fazer login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome\",\n        onChange: event => {\n          setInfoSign(prevState => {\n            return { ...prevState,\n              'nome': event.target.value\n            };\n          });\n        },\n        value: infoSign.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Sobrenome\",\n        onChange: event => {\n          setInfoSign(prevState => {\n            return { ...prevState,\n              'sobrenome': event.target.value\n            };\n          });\n        },\n        value: infoSign.sobrenome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: event => {\n          setInfoSign(prevState => {\n            return { ...prevState,\n              'email': event.target.value\n            };\n          });\n        },\n        value: infoSign.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        onChange: event => {\n          setInfoSign(prevState => {\n            return { ...prevState,\n              'senha': event.target.value\n            };\n          });\n        },\n        value: infoSign.senha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirme a senha\",\n        onChange: event => {\n          setInfoSign(prevState => {\n            return { ...prevState,\n              'senhaConfirma': event.target.value\n            };\n          });\n        },\n        value: infoSign.senhaConfirma\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Data de nascimento:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: event => {\n            setInfoSign(prevState => {\n              return { ...prevState,\n                'dataNascimento': event.target.value\n              };\n            });\n          },\n          value: infoSign.dataNascimento\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div-checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"checkTerms\",\n          onChange: event => {\n            setTerms(event.target.checked);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkTerms\",\n          children: [\"Eu li e concordo com os \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"termos de uso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 77\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-cadastro\",\n        placeholder: \"Data de nascimento\",\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"erroMessage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroComponent, \"0SUYDBF8m//OX+5qaSI7nzjqxtQ=\");\n\n_c = CadastroComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroComponent\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/components/CadastroComponent/index.tsx"],"names":["Button","Link","logo","useState","ReactDOM","Load","CadastroComponent","terms","setTerms","infoSign","setInfoSign","handleSignUp","event","preventDefault","erroMessage","document","getElementById","innerHTML","style","display","nome","sobrenome","email","senha","senhaConfirma","dataNascimento","length","formInfoSign","Object","entries","dataConfigs","FormData","map","data","append","configs","header","method","body","render","fetch","then","response","json","status","console","log","prevState","target","value","checked"],"mappings":"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","sourcesContent":["import { Button } from '../Button/index'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../../assets/images/logo.png'\r\nimport { FormEvent, useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Load } from '../Load'\r\n\r\nexport function CadastroComponent(){\r\n    const [terms, setTerms] = useState(false)\r\n    const [infoSign, setInfoSign] = useState({\r\n        'nome': '',\r\n        'sobrenome': '',\r\n        'email': '',\r\n        'senha': '',\r\n        'senhaConfirma': '',\r\n        'dataNascimento': ''\r\n    })\r\n\r\n    async function handleSignUp(event: FormEvent) {\r\n        event.preventDefault();\r\n        let erroMessage = document.getElementById('erroMessage')\r\n        if (terms == false) {\r\n            erroMessage!.innerHTML = 'Você precisa aceitar os termos para se cadastrar.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.nome == '' || infoSign.sobrenome == '' || infoSign.email == '' || infoSign.senha == '' || infoSign.senhaConfirma == '' || infoSign.dataNascimento == '') {\r\n            erroMessage!.innerHTML = 'Todos os campos precisam ser preenchidos.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.senha != infoSign.senhaConfirma) {\r\n            erroMessage!.innerHTML = 'As senhas digitadas não se coincidem.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.senha.length < 8) {\r\n            erroMessage!.innerHTML = 'As senha deve conter no minimo 8 caracteres'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n        else {\r\n            let formInfoSign = Object.entries(infoSign)\r\n            const dataConfigs = new FormData();\r\n            formInfoSign.map(data => {\r\n                dataConfigs.append(data[0], data[1])\r\n            })\r\n\r\n            const configs = {\r\n                header: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                method: 'POST',\r\n                body: dataConfigs\r\n            }\r\n            \r\n            ReactDOM.render(<Load message={'Aguarde, a sua conta está sendo criada...'}/>, document.getElementById('right-content'))\r\n            fetch('http://localhost:8000/cadastro', configs)\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n\r\n                    if (data.status == false) {\r\n                        ReactDOM.render(<CadastroComponent />, document.getElementById('right-content'))\r\n                        erroMessage = document.getElementById('erroMessage')\r\n                        erroMessage!.innerHTML = 'Esse email já foi cadastrado.'\r\n                        erroMessage!.style.display = 'block'\r\n                        console.log(erroMessage)\r\n                    } else if (data.status == true) {\r\n                        document.getElementById('right-content')!.innerHTML = '<h1>Hello world! </h1>'\r\n                    }\r\n\r\n\r\n                    console.log(data.status)\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            <img src={logo} alt=\"Logo frindly finance\" />\r\n                <h2>Já possuí a sua conta? <Link to={'/'}>fazer login</Link></h2>\r\n                <form onSubmit={handleSignUp}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nome\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'nome': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.nome}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Sobrenome\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'sobrenome': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.sobrenome}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'email': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.email}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'senha': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.senha}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirme a senha\"\r\n                        onChange={event => {\r\n                            setInfoSign(prevState => {\r\n                                return { ...prevState, 'senhaConfirma': event.target.value }\r\n                            })\r\n                        }}\r\n                        value={infoSign.senhaConfirma}\r\n                    />\r\n                    <div id=\"div-date\">\r\n                        <label htmlFor=\"date\">Data de nascimento:</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            name=\"date\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'dataNascimento': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.dataNascimento}\r\n                        />\r\n                    </div>\r\n                    <div id=\"div-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"checkTerms\"\r\n                            onChange={event => {\r\n                                setTerms(event.target.checked)\r\n                            }}\r\n\r\n                        />\r\n                        <label htmlFor=\"checkTerms\">Eu li e concordo com os <a href=\"#\">termos de uso</a>  </label>\r\n                    </div>\r\n\r\n                    <Button className=\"button-cadastro\" placeholder=\"Data de nascimento\" type=\"submit\">Cadastrar</Button>\r\n                    <p id=\"erroMessage\"></p>\r\n                </form>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}