{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\pages\\\\Cadastro.tsx\",\n    _s = $RefreshSig$();\n\nimport '../style/Home.scss';\nimport { MainAside } from '../components/MainAside';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Load } from '../components/Load';\nimport { CadastroComponent } from '../components/CadastroComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cadastro() {\n  _s();\n\n  const [terms, setTerms] = useState(false);\n  const [infoSign, setInfoSign] = useState({\n    'nome': '',\n    'sobrenome': '',\n    'email': '',\n    'senha': '',\n    'senhaConfirma': '',\n    'dataNascimento': ''\n  });\n\n  async function handleSignUp(event) {\n    event.preventDefault();\n    let erroMessage = document.getElementById('erroMessage');\n\n    if (terms == false) {\n      erroMessage.innerHTML = 'Você precisa aceitar os termos para se cadastrar.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.nome == '' || infoSign.sobrenome == '' || infoSign.email == '' || infoSign.senha == '' || infoSign.senhaConfirma == '' || infoSign.dataNascimento == '') {\n      erroMessage.innerHTML = 'Todos os campos precisam ser preenchidos.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.senha != infoSign.senhaConfirma) {\n      erroMessage.innerHTML = 'As senhas digitadas não se coincidem.';\n      erroMessage.style.display = 'block';\n    } else if (infoSign.senha.length < 8) {\n      erroMessage.innerHTML = 'As senha deve conter no minimo 8 caracteres';\n      erroMessage.style.display = 'block';\n    } else {\n      var _document$getElementB;\n\n      let formInfoSign = Object.entries(infoSign);\n      const dataConfigs = new FormData();\n      formInfoSign.map(data => {\n        dataConfigs.append(data[0], data[1]);\n      });\n      const configs = {\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        method: 'POST',\n        body: dataConfigs\n      };\n      const cadastroContent = (_document$getElementB = document.getElementById('right-content')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.innerHTML;\n      console.log(cadastroContent);\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(Load, {\n        message: 'Aguarde, a sua conta está sendo criada...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this), document.getElementById('right-content'));\n      fetch('http://localhost:8000/cadastro', configs).then(response => {\n        return response.json();\n      }).then(data => {\n        if (data.status == false) {\n          document.getElementById('right-content').innerHTML = cadastroContent;\n          erroMessage = document.getElementById('erroMessage');\n          erroMessage.innerHTML = 'Esse email já foi cadastrado.';\n          erroMessage.style.display = 'block';\n          console.log(erroMessage);\n        } else if (data.status == true) {\n          document.getElementById('right-content').innerHTML = '<h1>Hello world! </h1>';\n        }\n\n        console.log(data.status);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-home\",\n    children: [/*#__PURE__*/_jsxDEV(MainAside, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"right-content\",\n      children: /*#__PURE__*/_jsxDEV(CadastroComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cadastro, \"0SUYDBF8m//OX+5qaSI7nzjqxtQ=\");\n\n_c = Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/pages/Cadastro.tsx"],"names":["MainAside","useState","ReactDOM","Load","CadastroComponent","Cadastro","terms","setTerms","infoSign","setInfoSign","handleSignUp","event","preventDefault","erroMessage","document","getElementById","innerHTML","style","display","nome","sobrenome","email","senha","senhaConfirma","dataNascimento","length","formInfoSign","Object","entries","dataConfigs","FormData","map","data","append","configs","header","method","body","cadastroContent","console","log","render","fetch","then","response","json","status"],"mappings":"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","sourcesContent":["import '../style/Home.scss'\r\nimport logo from '../assets/images/logo.png'\r\nimport { Button } from '../components/Button/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { MainAside } from '../components/MainAside'\r\nimport { FormEvent, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport load from '../assets/gifs/load.gif'\r\nimport { Load } from '../components/Load'\r\nimport { CadastroComponent } from '../components/CadastroComponent'\r\n\r\nexport function Cadastro() {\r\n    const [terms, setTerms] = useState(false)\r\n    const [infoSign, setInfoSign] = useState({\r\n        'nome': '',\r\n        'sobrenome': '',\r\n        'email': '',\r\n        'senha': '',\r\n        'senhaConfirma': '',\r\n        'dataNascimento': ''\r\n    })\r\n\r\n    async function handleSignUp(event: FormEvent) {\r\n        event.preventDefault();\r\n        let erroMessage = document.getElementById('erroMessage')\r\n        if (terms == false) {\r\n            erroMessage!.innerHTML = 'Você precisa aceitar os termos para se cadastrar.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.nome == '' || infoSign.sobrenome == '' || infoSign.email == '' || infoSign.senha == '' || infoSign.senhaConfirma == '' || infoSign.dataNascimento == '') {\r\n            erroMessage!.innerHTML = 'Todos os campos precisam ser preenchidos.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.senha != infoSign.senhaConfirma) {\r\n            erroMessage!.innerHTML = 'As senhas digitadas não se coincidem.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        else if (infoSign.senha.length < 8) {\r\n            erroMessage!.innerHTML = 'As senha deve conter no minimo 8 caracteres'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n        else {\r\n            let formInfoSign = Object.entries(infoSign)\r\n            const dataConfigs = new FormData();\r\n            formInfoSign.map(data => {\r\n                dataConfigs.append(data[0], data[1])\r\n            })\r\n\r\n            const configs = {\r\n                header: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                method: 'POST',\r\n                body: dataConfigs\r\n            }\r\n            const cadastroContent = document.getElementById('right-content')?.innerHTML\r\n            console.log(cadastroContent)\r\n            ReactDOM.render(<Load message={'Aguarde, a sua conta está sendo criada...'}/>, document.getElementById('right-content'))\r\n            fetch('http://localhost:8000/cadastro', configs)\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n\r\n                    if (data.status == false) {\r\n                        document.getElementById('right-content')!.innerHTML = cadastroContent!\r\n                        erroMessage = document.getElementById('erroMessage')\r\n                        erroMessage!.innerHTML = 'Esse email já foi cadastrado.'\r\n                        erroMessage!.style.display = 'block'\r\n                        console.log(erroMessage)\r\n                    } else if (data.status == true) {\r\n                        document.getElementById('right-content')!.innerHTML = '<h1>Hello world! </h1>'\r\n                    }\r\n\r\n\r\n                    console.log(data.status)\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-home\">\r\n\r\n            <MainAside />\r\n\r\n            <main id=\"right-content\">\r\n                <CadastroComponent />\r\n\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}