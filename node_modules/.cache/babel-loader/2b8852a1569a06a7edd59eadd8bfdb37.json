{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\components\\\\UserInfo\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport './styles.scss';\nimport { Button } from '../Button';\nimport { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserInfo() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const [userInfo, setUserInfo] = useState({\n    salario: '',\n    diaPagamento: ''\n  });\n\n  async function handleSetUserInfo(event) {\n    event.preventDefault();\n    const formUserInfo = Object.entries(userInfo);\n    const dataConfigs = new FormData();\n    formUserInfo.map(value => {\n      dataConfigs.append(value[0], value[1]);\n    });\n    const configs = {\n      header: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      method: 'POST',\n      body: dataConfigs\n    };\n    console.log(user);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"userInfo\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCheck,\n      className: \"checkIcon\",\n      size: \"6x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Estamos quase l\\xE1, precisamos de mais algumas informa\\xE7\\xF5es para concluir o cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSetUserInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Nos informe o seu sal\\xE1rio\",\n        onChange: event => {\n          setUserInfo(prevState => {\n            return { ...prevState,\n              salario: event.target.value\n            };\n          });\n        },\n        value: userInfo.salario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        max: \"31\",\n        min: \"1\",\n        placeholder: \"Informe o dia de pagamento\",\n        onChange: event => {\n          setUserInfo(prevState => {\n            return { ...prevState,\n              diaPagamento: event.target.value\n            };\n          });\n        },\n        value: userInfo.diaPagamento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: [\"Continuar \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserInfo, \"fxDratqqqKtHUY0EXJ8Xnz8re9I=\", false, function () {\n  return [useAuth];\n});\n\n_c = UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/components/UserInfo/index.tsx"],"names":["FontAwesomeIcon","faCheck","faChevronRight","Button","useState","useAuth","UserInfo","user","userInfo","setUserInfo","salario","diaPagamento","handleSetUserInfo","event","preventDefault","formUserInfo","Object","entries","dataConfigs","FormData","map","value","append","configs","header","method","body","console","log","prevState","target"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,mCAAxC;AACA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAWF,OAAO,EAAxB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACrCM,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,YAAY,EAAE;AAFuB,GAAD,CAAxC;;AAIA,iBAAeC,iBAAf,CAAiCC,KAAjC,EAAmD;AAC/CA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeT,QAAf,CAArB;AACA,UAAMU,WAAW,GAAG,IAAIC,QAAJ,EAApB;AACAJ,IAAAA,YAAY,CAACK,GAAb,CAAiBC,KAAK,IAAI;AACtBH,MAAAA,WAAW,CAACI,MAAZ,CAAmBD,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC;AACH,KAFD;AAIA,UAAME,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ,OADI;AAKZC,MAAAA,MAAM,EAAE,MALI;AAMZC,MAAAA,IAAI,EAAER;AANM,KAAhB;AAUAS,IAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AAEH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEN,OAAvB;AAAgC,MAAA,SAAS,EAAC,WAA1C;AAAsD,MAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEW,iBAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,WAAW,EAAC,8BAFhB;AAGI,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACfJ,UAAAA,WAAW,CAACoB,SAAS,IAAI;AACrB,mBAAO,EAAE,GAAGA,SAAL;AAAgBnB,cAAAA,OAAO,EAAEG,KAAK,CAACiB,MAAN,CAAaT;AAAtC,aAAP;AACH,WAFU,CAAX;AAGH,SAPL;AAQI,QAAA,KAAK,EAAEb,QAAQ,CAACE;AARpB;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EAAC,IAFR;AAGI,QAAA,GAAG,EAAC,GAHR;AAII,QAAA,WAAW,EAAC,4BAJhB;AAKI,QAAA,QAAQ,EAAEG,KAAK,IAAI;AACfJ,UAAAA,WAAW,CAACoB,SAAS,IAAI;AACrB,mBAAO,EAAE,GAAGA,SAAL;AAAgBlB,cAAAA,YAAY,EAAEE,KAAK,CAACiB,MAAN,CAAaT;AAA3C,aAAP;AACH,WAFU,CAAX;AAGH,SATL;AAUI,QAAA,KAAK,EAAEb,QAAQ,CAACG;AAVpB;AAAA;AAAA;AAAA;AAAA,cAZJ,eAwBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,8CAAgC,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA5DeI,Q;UACKD,O;;;KADLC,Q","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport './styles.scss'\r\nimport { Button } from '../Button'\r\nimport { useState } from 'react'\r\nimport { FormEvent } from 'react-router/node_modules/@types/react'\r\nimport { useAuth } from '../../hooks/useAuth'\r\n\r\nexport function UserInfo() {\r\n    const { user } = useAuth()\r\n    const [userInfo, setUserInfo] = useState({\r\n        salario: '',\r\n        diaPagamento: ''\r\n    })\r\n    async function handleSetUserInfo(event: FormEvent) {\r\n        event.preventDefault()\r\n        const formUserInfo = Object.entries(userInfo)\r\n        const dataConfigs = new FormData()\r\n        formUserInfo.map(value => {\r\n            dataConfigs.append(value[0], value[1])\r\n        })\r\n\r\n        const configs = {\r\n            header: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            method: 'POST',\r\n            body: dataConfigs\r\n        }\r\n\r\n        \r\n        console.log(user)\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"userInfo\">\r\n            <FontAwesomeIcon icon={faCheck} className=\"checkIcon\" size=\"6x\" />\r\n            <h2>Estamos quase lá, precisamos de mais algumas informações para concluir o cadastro</h2>\r\n            <form onSubmit={handleSetUserInfo}>\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Nos informe o seu salário\"\r\n                    onChange={event => {\r\n                        setUserInfo(prevState => {\r\n                            return { ...prevState, salario: event.target.value }\r\n                        })\r\n                    }}\r\n                    value={userInfo.salario}\r\n                />\r\n\r\n                <input\r\n                    type=\"number\"\r\n                    max=\"31\"\r\n                    min=\"1\"\r\n                    placeholder=\"Informe o dia de pagamento\"\r\n                    onChange={event => {\r\n                        setUserInfo(prevState => {\r\n                            return { ...prevState, diaPagamento: event.target.value }\r\n                        })\r\n                    }}\r\n                    value={userInfo.diaPagamento}\r\n                />\r\n                <Button type=\"submit\">Continuar <FontAwesomeIcon icon={faChevronRight} /></Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}