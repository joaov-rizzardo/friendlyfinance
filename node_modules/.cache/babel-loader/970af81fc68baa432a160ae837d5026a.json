{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\friendlyfinance\\\\src\\\\pages\\\\Cadastro.tsx\",\n    _s = $RefreshSig$();\n\nimport '../style/login-cadastro.scss';\nimport logo from '../assets/images/logo.png';\nimport { Button } from '../components/Button/index';\nimport { Link, useHistory } from 'react-router-dom';\nimport { MainAside } from '../components/MainAside';\nimport { useState } from 'react';\nimport { Load } from '../components/Load';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cadastro() {\n  _s();\n\n  const {\n    signIn\n  } = useAuth();\n  const history = useHistory(); //estado utilizado para verificar se o usuário aceitou os termos de uso\n\n  const [terms, setTerms] = useState(false); //estado utilizado para armazenar um objeto contendo as informações referentes ao cadastro do usuário\n\n  const [infoSign, setInfoSign] = useState({\n    'nome': '',\n    'sobrenome': '',\n    'email': '',\n    'senha': '',\n    'senhaConfirma': '',\n    'dataNascimento': ''\n  });\n\n  async function handleSignUp(event) {\n    event.preventDefault();\n    let erroMessage = document.getElementById('erroMessage'); //testa se o usuário aceitou os termos de uso\n\n    if (terms === false) {\n      erroMessage.innerHTML = 'Você precisa aceitar os termos para se cadastrar.';\n      erroMessage.style.display = 'block';\n    } //testa se todos os campos foram preenchidos\n    else if (infoSign.nome === '' || infoSign.sobrenome === '' || infoSign.email === '' || infoSign.senha === '' || infoSign.senhaConfirma === '' || infoSign.dataNascimento === '') {\n        erroMessage.innerHTML = 'Todos os campos precisam ser preenchidos.';\n        erroMessage.style.display = 'block';\n      } //testa se as duas senhas digitadas são idênticas\n      else if (infoSign.senha !== infoSign.senhaConfirma) {\n          erroMessage.innerHTML = 'As senhas digitadas não se coincidem.';\n          erroMessage.style.display = 'block';\n        } //testa se a senha possuí no minimo 8 caracteres\n        else if (infoSign.senha.length < 8) {\n            erroMessage.innerHTML = 'As senha deve conter no minimo 8 caracteres';\n            erroMessage.style.display = 'block';\n          } else {\n            //transforma o objeto que contem os dados de cadastro em um array\n            let formInfoSign = Object.entries(infoSign); //instancia um objeto do tipo FormData para utilizar na requisição com o formato x-www-form-urlencoded\n\n            const dataConfigs = new FormData(); //percorre o array de dados do cadastro e preenche a constante dataConfigs\n\n            formInfoSign.forEach(data => {\n              dataConfigs.append(data[0], data[1]);\n            }); //configurações para serem utilizadas na requisição\n\n            const configs = {\n              header: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              method: 'POST',\n              body: dataConfigs\n            }; //exibe a tela de load em quanto aguarda o termino da requisição\n\n            document.getElementById('form-content').style.display = 'none';\n            document.getElementById('load').style.display = 'flex';\n            fetch('http://localhost:8000/cadastro', configs).then(response => {\n              return response.json();\n            }).then(data => {\n              if (data.status === false) {\n                document.getElementById('load').style.display = 'none';\n                document.getElementById('form-content').style.display = 'flex';\n                erroMessage = document.getElementById('erroMessage');\n                erroMessage.innerHTML = 'Esse email já foi cadastrado.';\n                erroMessage.style.display = 'block';\n                console.log(erroMessage);\n              } else if (data.status === true) {\n                signIn(data.user);\n                history.push('/cadastro/info');\n              }\n            });\n          }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-home\",\n    children: [/*#__PURE__*/_jsxDEV(MainAside, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"right-content\",\n      children: [/*#__PURE__*/_jsxDEV(Load, {\n        message: 'Aguarde, a sua conta está sendo criada...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo frindly finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"J\\xE1 possu\\xED a sua conta? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: '/login',\n            children: \"fazer login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignUp,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nome\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'nome': event.target.value\n                };\n              });\n            },\n            value: infoSign.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Sobrenome\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'sobrenome': event.target.value\n                };\n              });\n            },\n            value: infoSign.sobrenome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'email': event.target.value\n                };\n              });\n            },\n            value: infoSign.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Senha\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'senha': event.target.value\n                };\n              });\n            },\n            value: infoSign.senha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirme a senha\",\n            onChange: event => {\n              setInfoSign(prevState => {\n                return { ...prevState,\n                  'senhaConfirma': event.target.value\n                };\n              });\n            },\n            value: infoSign.senhaConfirma\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Data de nascimento:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              onChange: event => {\n                setInfoSign(prevState => {\n                  return { ...prevState,\n                    'dataNascimento': event.target.value\n                  };\n                });\n              },\n              value: infoSign.dataNascimento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"div-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"checkTerms\",\n              onChange: event => {\n                setTerms(event.target.checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"checkTerms\",\n              children: [\"Eu li e concordo com os \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"http://localhost:3000/\",\n                children: \"termos de uso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 81\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button-cadastro\",\n            placeholder: \"Data de nascimento\",\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"erroMessage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cadastro, \"EgiIdRx/xhZFSaqHy9dY1iXqB28=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Projetos/friendlyfinance/src/pages/Cadastro.tsx"],"names":["logo","Button","Link","useHistory","MainAside","useState","Load","useAuth","Cadastro","signIn","history","terms","setTerms","infoSign","setInfoSign","handleSignUp","event","preventDefault","erroMessage","document","getElementById","innerHTML","style","display","nome","sobrenome","email","senha","senhaConfirma","dataNascimento","length","formInfoSign","Object","entries","dataConfigs","FormData","forEach","data","append","configs","header","method","body","fetch","then","response","json","status","console","log","user","push","prevState","target","value","checked"],"mappings":"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","sourcesContent":["import '../style/login-cadastro.scss'\r\nimport logo from '../assets/images/logo.png'\r\nimport { Button } from '../components/Button/index'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport { MainAside } from '../components/MainAside'\r\nimport { FormEvent, useState } from 'react'\r\nimport { Load } from '../components/Load'\r\nimport { useAuth } from '../hooks/useAuth'\r\n\r\nexport function Cadastro() {\r\n    const {signIn} = useAuth()\r\n    const history = useHistory()\r\n\r\n    //estado utilizado para verificar se o usuário aceitou os termos de uso\r\n    const [terms, setTerms] = useState(false)\r\n\r\n    //estado utilizado para armazenar um objeto contendo as informações referentes ao cadastro do usuário\r\n    const [infoSign, setInfoSign] = useState({\r\n        'nome': '',\r\n        'sobrenome': '',\r\n        'email': '',\r\n        'senha': '',\r\n        'senhaConfirma': '',\r\n        'dataNascimento': ''\r\n    })\r\n\r\n    async function handleSignUp(event: FormEvent) {\r\n        event.preventDefault();\r\n        let erroMessage = document.getElementById('erroMessage')\r\n\r\n        //testa se o usuário aceitou os termos de uso\r\n        if (terms === false) {\r\n            erroMessage!.innerHTML = 'Você precisa aceitar os termos para se cadastrar.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        //testa se todos os campos foram preenchidos\r\n        else if (infoSign.nome === '' || infoSign.sobrenome === '' || infoSign.email === '' || infoSign.senha === '' || infoSign.senhaConfirma === '' || infoSign.dataNascimento === '') {\r\n            erroMessage!.innerHTML = 'Todos os campos precisam ser preenchidos.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        //testa se as duas senhas digitadas são idênticas\r\n        else if (infoSign.senha !== infoSign.senhaConfirma) {\r\n            erroMessage!.innerHTML = 'As senhas digitadas não se coincidem.'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n\r\n        //testa se a senha possuí no minimo 8 caracteres\r\n        else if (infoSign.senha.length < 8) {\r\n            erroMessage!.innerHTML = 'As senha deve conter no minimo 8 caracteres'\r\n            erroMessage!.style.display = 'block'\r\n        }\r\n        else {\r\n            //transforma o objeto que contem os dados de cadastro em um array\r\n            let formInfoSign = Object.entries(infoSign)\r\n            //instancia um objeto do tipo FormData para utilizar na requisição com o formato x-www-form-urlencoded\r\n            const dataConfigs = new FormData();\r\n            //percorre o array de dados do cadastro e preenche a constante dataConfigs\r\n            formInfoSign.forEach(data => {\r\n                dataConfigs.append(data[0], data[1])\r\n            })\r\n\r\n            //configurações para serem utilizadas na requisição\r\n            const configs = {\r\n                header: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                method: 'POST',\r\n                body: dataConfigs\r\n            }\r\n            \r\n            //exibe a tela de load em quanto aguarda o termino da requisição\r\n            document.getElementById('form-content')!.style.display = 'none'\r\n            document.getElementById('load')!.style.display = 'flex'\r\n\r\n            fetch('http://localhost:8000/cadastro', configs)\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n\r\n                    if (data.status === false) {\r\n                        document.getElementById('load')!.style.display = 'none'\r\n                        document.getElementById('form-content')!.style.display = 'flex'\r\n                        erroMessage = document.getElementById('erroMessage')\r\n                        erroMessage!.innerHTML = 'Esse email já foi cadastrado.'\r\n                        erroMessage!.style.display = 'block'\r\n                        console.log(erroMessage)\r\n                    } else if (data.status === true) {\r\n                        signIn(data.user)\r\n                        history.push('/cadastro/info')\r\n                        \r\n                    }\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-home\">\r\n            \r\n            <MainAside />\r\n\r\n            <main id=\"right-content\">\r\n\r\n                <Load message={'Aguarde, a sua conta está sendo criada...'} />\r\n                \r\n                <div id=\"form-content\">\r\n                    <img src={logo} alt=\"Logo frindly finance\" />\r\n                    <h2>Já possuí a sua conta? <Link to={'/login'}>fazer login</Link></h2>\r\n                    <form onSubmit={handleSignUp}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nome\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'nome': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.nome}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Sobrenome\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'sobrenome': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.sobrenome}\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'email': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.email}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Senha\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'senha': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.senha}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirme a senha\"\r\n                            onChange={event => {\r\n                                setInfoSign(prevState => {\r\n                                    return { ...prevState, 'senhaConfirma': event.target.value }\r\n                                })\r\n                            }}\r\n                            value={infoSign.senhaConfirma}\r\n                        />\r\n                        <div id=\"div-date\">\r\n                            <label htmlFor=\"date\">Data de nascimento:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"date\"\r\n                                onChange={event => {\r\n                                    setInfoSign(prevState => {\r\n                                        return { ...prevState, 'dataNascimento': event.target.value }\r\n                                    })\r\n                                }}\r\n                                value={infoSign.dataNascimento}\r\n                            />\r\n                        </div>\r\n                        <div id=\"div-checkbox\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"checkTerms\"\r\n                                onChange={event => {\r\n                                    setTerms(event.target.checked)\r\n                                }}\r\n\r\n                            />\r\n                            <label htmlFor=\"checkTerms\">Eu li e concordo com os <a href=\"http://localhost:3000/\">termos de uso</a>  </label>\r\n                        </div>\r\n\r\n                        <Button className=\"button-cadastro\" placeholder=\"Data de nascimento\" type=\"submit\">Cadastrar</Button>\r\n                        <p id=\"erroMessage\"></p>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}